#+TITLE: smsn
#+ROAM_ALIAS: "Semantic Synchrony (software)"
* refs
** handy files/folders
*** ~/Encfs/kb-no-encfs/
*** ~/smsn-mode/lisp/smsn-commands.el
*** ? latest data
 ~/_stale/pre-2019-07/smsn,maybe-latest-data/kb-not-encfs/neo4j
   dec 15, 2018
 /run/media/jeff/shuttle/smsn/kb
   (encrypted)
   dec 15, 2018
 ~/home/jeff/smsn-resurrect/kb/neo4j
   dec 10, 2019 -- IMPOSSIBLE
 ~/_stale/pre-2019-07/smsn+/kb
   june 15 2018
** online
*** smsn command reference
 https://github.com/synchrony/smsn-mode/wiki/Command-reference
*** installing smsn
 https://github.com/synchrony/smsn/wiki/Installation
* TODO get it working
** TODO [[id:ba1a3e6f-0407-4004-8aa0-7333b0673b42][build the Dockerfile]]
alternatives
*** why not just use a preexisting Docker image?
Because it won't write to VCS, I think.
*** what docker-build doesn't build, build from within container
*** TODO docker images I've tried building
They fail in different ways, because (among maybe other reasons)
of how gremlin-server.sh varies across those different versions.
I wrote up their problems in [[file:../../tech/20200615172233-smsn_report_2020_06_15.org][smsn-report-2020-06-15]].
**** TODO next
***** TODO ponder someone else's Dockerfile
looks similar to mine in the `remlin-server.sh -i` line:
https://github.com/MrSaints/docker-gremlin-neo4j/blob/master/gremlin-server-neo4j/Dockerfile
***** DONE look over other branches
No significant differences.
***** DONE (failed) try 3.2.5 without the -i option
doesn't seem to help
***** DONE (failed) point gremlin-server.sh at a .yaml file
Pointing it at conf/gremlin-serer-neo4j.yaml starts the server during the docker build, which is dumb.
**** gs 3.2.4
docker build -f Dockerfile -t		\
  jeffreybbrown/smsn-develop:gs_3.2.4 .	\
  | tee logs/"build-log.develop.`date`.txt"
**** gs 3.2.5
docker build -f Dockerfile -t		\
  jeffreybbrown/smsn-develop:gs_3.2.5 .	\
  | tee logs/"build-log.develop.`date`.txt"
***** builds, but not really
Step 30/34 : RUN chmod u+x /root/gremlin/bin/gremlin-server.sh      &&               /root/gremlin/bin/gremlin-server.sh -i org.apache.tinkerpop neo4j-gremlin 3.2.5
 ---> Running in cd9d72363756

WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.codehaus.groovy.reflection.CachedClass (file:/root/apache-tinkerpop-gremlin-server-3.2.5/lib/groovy-2.4.11-indy.jar) to method java.lang.Object.finalize()
WARNING: Please consider reporting this to the maintainers of org.codehaus.groovy.reflection.CachedClass
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
Could not install the dependency: Error grabbing Grapes -- [unresolved dependency: org.apache.tinkerpop#neo4j-gremlin;3.2.5: not found]
java.lang.RuntimeException: Error grabbing Grapes -- [unresolved dependency: org.apache.tinkerpop#neo4j-gremlin;3.2.5: not
 found]
        at org.codehaus.groovy.vmplugin.v7.IndyInterface.selectMethod(IndyInterface.java:232)
        at groovy.grape.GrapeIvy.getDependencies(GrapeIvy.groovy:424)
        at org.codehaus.groovy.vmplugin.v7.IndyInterface.selectMethod(IndyInterface.java:232)
        at groovy.grape.GrapeIvy.resolve(GrapeIvy.groovy:571)
        at org.codehaus.groovy.vmplugin.v7.IndyInterface.selectMethod(IndyInterface.java:232)
        at groovy.grape.GrapeIvy.resolve(GrapeIvy.groovy:534)
        at groovy.grape.Grape.resolve(Grape.java:202)
        at org.codehaus.groovy.vmplugin.v7.IndyInterface.selectMethod(IndyInterface.java:232)
        at org.apache.tinkerpop.gremlin.groovy.util.DependencyGrabber.copyDependenciesToPath(DependencyGrabber.groovy:124)
        at org.codehaus.groovy.vmplugin.v7.IndyInterface.selectMethod(IndyInterface.java:232)
        at org.apache.tinkerpop.gremlin.groovy.util.DependencyGrabber.copyDependenciesToPath(DependencyGrabber.groovy:77)
        at org.apache.tinkerpop.gremlin.server.util.GremlinServerInstall.main(GremlinServerInstall.java:38)
Removing intermediate container cd9d72363756
**** gs 3.2.11
***** build command
docker build -f Dockerfile -t		 \
  jeffreybbrown/smsn-develop:gs_3.2.11 . \
  | tee logs/"build-log.develop.`date`.txt"
***** why
I thought maybe the "error grabbing Grapes" error is probably because 3.2.5 isn't in the Grapes repository. (I don't know how to check that suspicion -- when I try to visit the repos listed in grapeConfig.xml, I get 404 errors.)
***** the error I get
It dumps a core inside the container.
****** the surface of it
```
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.codehaus.groovy.reflection.CachedClass (file:/root/apache-tinkerpop-gremlin-server-3.2.11/lib/groovy-2.4.15-indy.jar) to metho
d java.lang.Object.finalize()
WARNING: Please consider reporting this to the maintainers of org.codehaus.groovy.reflection.CachedClass
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
#
# A fatal error has been detected by the Java Runtime Environment:
#
#  SIGSEGV (0xb) at pc=0x00007f074bdce080, pid=7, tid=23
#
# JRE version: OpenJDK Runtime Environment (11.0.6+10) (build 11.0.6+10-post-Ubuntu-1ubuntu118.04.1)
# Java VM: OpenJDK 64-Bit Server VM (11.0.6+10-post-Ubuntu-1ubuntu118.04.1, mixed mode, tiered, compressed oops, g1 gc, linux-amd64)
# Problematic frame:
# V  [libjvm.so+0xd31080]
#
# Core dump will be written. Default location: Core dumps may be processed with "/nix/store/8whc4mvh8mwzzja8zynhc770p5zrci6i-systemd-243.7/lib/systemd/systemd-coredump
%P %u %g %s %t %c %h" (or dumping to /root/apache-tinkerpop-gremlin-server-3.2.11/core.7)
#
# An error report file with more information is saved as:
# /root/apache-tinkerpop-gremlin-server-3.2.11/hs_err_pid7.log
#
# If you would like to submit a bug report, please visit:
#   https://bugs.launchpad.net/ubuntu/+source/openjdk-lts
#
Aborted (core dumped)
The command '/bin/sh -c chmod u+x /root/gremlin/bin/gremlin-server.sh      &&               /root/gremlin/bin/gremlin-server.sh -i                    org.apache.tinkerp
op neo4j-gremlin ${GS_VERSION}' returned a non-zero code: 134
```

In order to see the core dump I've got to try running it from within the Docker container.
**** gs 3.4.4
docker build -f Dockerfile -t		\
  jeffreybbrown/smsn-develop:gs_3.4.4 .	\
  | tee logs/"build-log.develop.`date`.txt"
***** Doesn't build; gives a "no config file" error.
Step 31/35 : RUN chmod u+x /root/gremlin/bin/gremlin-server.sh      &&               /root/gremlin/bin/gremlin-server.sh -i                    org.apache.tinkerpop neo4j-gremlin ${GS_VERSION}
 ---> Running in 5fb6fd785225
Configuration file not found.
** TODO can't use write-VCS
 https://gist.github.com/JeffreyBenjaminBrown/4324c3d171ffab453af9ba5d61c2b5ec
** TODO try a git cycle
** TODO [[id:8ed67ee7-e7ec-453d-a40e-283105c7fe8f][Docker won't mount an Encfs sink]]
* TODO clean SmSn for others
** ? Do we need to refresh docker-smsn to the latest (dev) branch?
** TODO document how to [[id:ba1a3e6f-0407-4004-8aa0-7333b0673b42][build the Dockerfile]]
* smsn / how to do stuff
** outside smsn
*** build the Dockerfile
    :PROPERTIES:
    :ID:       ba1a3e6f-0407-4004-8aa0-7333b0673b42
    :END:
**** DONE build the .jar natively, copy it to docker-smsn
  Run this from the root folder of the smsn/ code:
    gradle :smsn-server:shadowJar
  Somehwere, that will build a file that matches this regex:
    smsn-server-*-all.jar
  Copy that to be a sibling of the Dockerfile.
**** TODO choose a gremlin-server ("gs") version
***** 3.4.7?
That's the latest as of today, June 15 2020.
***** 3.4.4?
The last SmSn commit was on Jan 14 2020.
The latest stable version of GS then was 3.4.4.
***** 3.2.5?
The version of GS used by docker-smsn was still 3.2.5
  as of Fri Jun 15 2018, its last meaningful `commit.
*** launch SmSn
**** sequentially
***** docker run
   docker run --name smsn -it -v /home/jeff/Encfs/kb-no-encfs:/mnt/smsn-data -p 8183:8182 -d -h 127.0.0.1 jeffreybbrown/smsn-develop:2018-02-26
     # was: smsn-develop:2017-11-24
***** PITFALL: enter the Docker container and run `start`
**** PITFALL: Docker won't mount an Encfs sink
    :PROPERTIES:
    :ID:       8ed67ee7-e7ec-453d-a40e-283105c7fe8f
    :END:
That is, a folder that Encfs is funneling data into.
** inside smsn
*** set-source
**** The move mode command is "s".
**** How I fixed it
 (It wasn't working for a while.)
 It started working once I fixed smsn.yaml and updated smsn-mode.
