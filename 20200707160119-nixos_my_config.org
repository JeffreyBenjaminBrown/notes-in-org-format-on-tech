#+title: NixOS, my config
* TODO ONGOING : switching to unstable
** ref
https://stackoverflow.com/questions/41230430/how-do-i-upgrade-my-system-to-nixos-unstable
** command
sudo nix-channel --add https://nixos.org/channels/nixos-unstable nixos
sudo nix-channel --add https://nixos.org/channels/nixpkgs-unstable nixos
sudo nixos-rebuild switch --upgrade
* TODO asked quesitons, unresolved
** [[https://discourse.nixos.org/t/why-does-stack-haskell-keep-downloading-the-same-stuff/7924][Why does Stack keep downloading the same stuff?]]
* PITFALL: procedurally installed
** emacs org-roam
* PITFALL: to record video with camera and mic
I use a separate NixOS config,
which uses PulseAudio to feed the mic into [[file:20200707152447-cheese.org][cheese]]
* PITFALL: my config outside of .nix files
~/.emacs
~/.stack/config.yaml
/etc/tmux.conf
* TODO file: installing monome
** BLOCKED asking why serialosc fails to build
*** refs
I first posted on stackoverflow, then discourse.nixos. I got my first response on discourse.nixos, but then that same one and another on SO.
https://stackoverflow.com/questions/59943707/nix-build-fails-because-python-wants-something-thats-unavailable-without-say
https://discourse.nixos.org/t/nix-build-fails-because-python-wants-something-thats-unavailable-without-saying-what-it-wants/5675/2
*** notes
**** nix-shell succeeds silently
Consider this recorded passage:
```
[jeff@jbb-dell:~/nix/jbb-config/custom-packages/serialosc]$ nix-shell https://github.com/JeffreyBenjaminBrown/nixpkgs/archive/2bbd131811991bec9ae6b296b5cd1441640c306c.tar.gz -A serialosc --pure

[nix-shell:~/nix/jbb-config/custom-packages/serialosc]$
```
It might look like nothing happened, but notice how the prompt has changed.
After running the command, I am in the nix-shell.
*** steps taken by KoviRobi
**** from bash (alternatives)
# This pulls from my nixpkgs fork on Github.
# nix-shell https://github.com/JeffreyBenjaminBrown/nixpkgs/archive/2bbd131811991bec9ae6b296b5cd1441640c306c.tar.gz -A serialosc --pure
# This uses my local copy.
nix-shell /home/jeff/nix/nixpkgs-fork -A serialosc --pure
**** from the nix shell
# ###################
mkdir /tmp/delme-serialosc
cd    /tmp/delme-serialosc
type genericBuild # prints the genericBuild recipe to screen
  # KoviRobi somehow read this to know what to do next.
${unpackPhase:-unpackPhase}
cd $sourceRoot
  # sourceRoot = ./serialosc, as stated by the output of the previous step.
${patchPhase:-patchPhase}
  # I don't see this doing anything. Did it?
${configurePhase:-configurePhase}
  # The error happens here.
type ${configurePhase:-configurePhase}
    # The waf script printed from the prior step.
    # ###########################################
    # KoviRobi suggests evaluating each of these steps in the nix-shell,
    # until getting to the python step.
    # Then run that (described next) in the Python debugger, pdb.
    runHook preConfigure;
    if ! [ -f "${wafPath:=./waf}" ]; then
        echo "copying waf to $wafPath...";
        cp /nix/store/msja67ann3qlvps7jajnx5zivyl4r715-waf-2.0.18 "$wafPath";
    fi;
    if [ -z "${dontAddPrefix:-}" ] && [ -n "$prefix" ]; then
        wafConfigureFlags="${prefixKey:---prefix=}$prefix $wafConfigureFlags";
    fi;
    if true; then
      local flagsArray=("${flagsArray[@]}" $wafConfigureFlags "${wafConfigureFlagsArray[@]}" ${configureTargets:-configure});
      echoCmd 'configure flags' "${flagsArray[@]}";
      python "$wafPath" "${flagsArray[@]}";
    fi;
    runHook postConfigure

python -m pdb "$wafPath" "${flagsArray[@]}";
  # Does this run {configurePhase:-configurePhase} until hitting an error?
  # Is wafPath the same as {configurePhase:-configurePhase}?
  # If so, how did you know that?

# from Python debugger
# ###################
continue # or cont, or just c
break /nix/store/lbrpma3528hq7gwn8ffbnwaxvsqah0bb-python-2.7.17/lib/python2.7/subprocess.py:1047
continue
up
# press Return without entering a command to repeat the previous one.
print(popenargs)
*** TODO ask in response
**** how did you find this URL?
```
nix-shell https://github.com/JeffreyBenjaminBrown/nixpkgs/archive/2bbd131811991bec9ae6b296b5cd1441640c306c.tar.gz -A serialosc --pure
```
**** where are these build phases documented?
the ones that show up after running `type genericBuild`.
**** what does this notation mean? why did you skip it?
When I run `type genericBuild`, I see this list of phases:
```
         phases="${prePhases:-} unpackPhase patchPhase ${preConfigurePhases:-}             configurePhase ${preBuildPhases:-} buildPhase checkPhase             ${preInstallPhases:-} installPhase ${preFixupPhases:-} fixupPhase installCheckPhase             ${preDistPhases:-} distPhase ${postPhases:-}";
```
In your response you list the phases, but you omit the bracketed expressions. Why? And what do they mean?
**** I don't see the patchPhase step doing anything. Did it?
```
[nix-nshell:/tmp/delme-serialosc/serialosc]$ ${patchPhase:-patchPhase}

[nix-shell:/tmp/delme-serialosc/serialosc]$
```
**** How do I replace multiple lines?

** nix-env installations are permanent
 I installed some things (libuv and libmonome) via `nix-env -f ~/nix/nixpkgs -iA <package name>`. They still work after rebuilding.
** git submodule update: model code
~/nix/nixpkgs/pkgs/development/compilers/chez/default.nix
